name: Tests
on:
  push:
    branches-ignore:
      - main
  schedule:
    - cron: '0 0 * * *'
jobs:
  test:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: nodemodules-${{ hashFiles('yarn.lock') }}
          restore-keys: nodemodules-

      - name: Install Node packages
        run: yarn install

      - name: Create .env file
        run: cp .env.dist .env

      - name: Build
        run: yarn build

      - name: Lint
        run: yarn lint

  chrome-extension-e2e:
    name: Chrome extension e2e tests
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: yarn install && yarn list

      - name: Setup playwright
        run: yarn upgrade --pattern playwright --pure-lockfile && npx playwright install-deps && npx playwright --version

      - name: Create .env file
        run: |
          echo "VITE_API_KEY=${{ secrets.API_KEY }}" >> .env
          echo "VITE_WEBSITE_URL=https://localhost:8080/" >> .env
          echo "VITE_ADD_EXTENSION_ID_TO_URL=true" >> .env

      - name: Build extension
        run: yarn extension:build

      - name: Build website
        run: yarn website:build

      - name: Run tests
        uses: GabrielBB/xvfb-action@86d97bde4a65fe9b290c0b3fb92c2c4ed0e5302d
        env:
          CI: true
        with:
          run: yarn extension:e2e

      - name: Upload trace
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: Trace (OS ${{ matrix.os }})
          path: packages/chrome-extension-e2e/test-results

      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Unit Test Results (OS ${{ matrix.os }})
          path: packages/chrome-extension-e2e/reports/report.xml

  publish-test-results:
    name: Publish test results
    needs: chrome-extension-e2e
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
      contents: read
      issues: read
    if: always()
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@3bf80f8ff3396c9acdab73f00109f3cd06468544
        with:
          files: 'artifacts/**/*.xml'
          check_name: 'Chrome Extension E2E Test Results'
